[{"D:\\git\\task-manager-react\\src\\index.js":"1","D:\\git\\task-manager-react\\src\\components\\counter.jsx":"2","D:\\git\\task-manager-react\\src\\components\\counters.js":"3","D:\\git\\task-manager-react\\src\\App.js":"4","D:\\git\\task-manager-react\\src\\components\\NavBar.jsx":"5","D:\\git\\task-manager-react\\src\\components\\taskManager.jsx":"6","D:\\git\\task-manager-react\\src\\components\\common\\like.jsx":"7"},{"size":150,"mtime":1610476253206,"results":"8","hashOfConfig":"9"},{"size":1391,"mtime":1610480653536,"results":"10","hashOfConfig":"9"},{"size":794,"mtime":1610479313644,"results":"11","hashOfConfig":"9"},{"size":2891,"mtime":1610905549739,"results":"12","hashOfConfig":"9"},{"size":2263,"mtime":1610565941641,"results":"13","hashOfConfig":"9"},{"size":2962,"mtime":1610907485653,"results":"14","hashOfConfig":"9"},{"size":269,"mtime":1610907453898,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1oqs23a",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\git\\task-manager-react\\src\\index.js",[],["34","35"],"D:\\git\\task-manager-react\\src\\components\\counter.jsx",["36"],"import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nclass Counter extends Component {\r\n  constructor() {\r\n    super();\r\n    console.log(\"Counter Constructed!\");\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"Counter Mounted!\");\r\n  }\r\n  componentWillUnmount() {\r\n    console.log(\"Counter Will Un Mounted!\");\r\n    console.log(\"Counter to be deleted: \" + this.props.counter.id);\r\n  }\r\n  \r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.counter.value !== this.props.counter.value) {\r\n      console.log(\"call ajax call to counter: \" + this.props.counter.value);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"badge badge-primary\">{this.props.counter.value}</div>\r\n        <button\r\n          onClick={() => this.props.onIncrement(this.props.counter)}\r\n          className=\"btn btn-secondary btn-sm m-2\"\r\n        >\r\n          +\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.onDecrement(this.props.counter)}\r\n          className=\"btn btn-secondary btn-sm m-2\"\r\n        >\r\n          -\r\n        </button>\r\n        <button\r\n          className=\"btn btn-info\"\r\n          onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          className=\"btn btn-secondary btn-sm m-2\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","D:\\git\\task-manager-react\\src\\components\\counters.js",[],"D:\\git\\task-manager-react\\src\\App.js",["37","38"],"import React, { Component } from \"react\";\r\nimport Counters from \"./components/counters\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport TaskManager from \"./components/taskManager\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    counters: [\r\n      { id: 1, value: 6 },\r\n      { id: 2, value: 0 },\r\n      { id: 3, value: 0 },\r\n      { id: 4, value: 0 },\r\n      { id: 5, value: 0 },\r\n      { id: 6, value: 0 },\r\n      { id: 7, value: 0 },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Router>\r\n          <NavBar\r\n            totalCounters={\r\n              this.state.counters.filter((c) => c.value > 0).length\r\n            }\r\n          />\r\n          <main className=\"container\">\r\n            <Switch>\r\n              <Route path=\"/\" exact component={Welcome}></Route>\r\n              <Route path=\"/counters\" exact component={CounterManager}></Route>\r\n              <Route path=\"/taskManager\" exact component={TaskManager}></Route>\r\n            </Switch>\r\n          </main>\r\n        </Router>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\nclass Welcome extends Component {\r\n  state = {};\r\n  render() {\r\n    return <div> Welcome to Apps</div>;\r\n  }\r\n}\r\n\r\nclass CounterManager extends Component {\r\n  state = {\r\n    counters: [\r\n      { id: 1, value: 6 },\r\n      { id: 2, value: 0 },\r\n      { id: 3, value: 0 },\r\n      { id: 4, value: 0 },\r\n      { id: 5, value: 0 },\r\n      { id: 6, value: 0 },\r\n      { id: 7, value: 0 },\r\n    ],\r\n  };\r\n\r\n  handleDelete = (counterId) => {\r\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\r\n    this.setState({ counters });\r\n  };\r\n  handleReset = () => {\r\n    const counters = this.state.counters.map((c) => {\r\n      c.value = 0;\r\n      return c;\r\n    });\r\n    this.setState({ counters });\r\n  };\r\n  handleIncrement = (counter) => {\r\n    const counters = [...this.state.counters];\r\n    const index = counters.indexOf(counter);\r\n    counters[index] = { ...counter };\r\n    counters[index].value++;\r\n    this.setState({ counters });\r\n  };\r\n  handleDecrement = (counter) => {\r\n    const counters = [...this.state.counters];\r\n    const index = counters.indexOf(counter);\r\n    counters[index] = { ...counter };\r\n    counters[index].value--;\r\n    this.setState({ counters });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <Counters\r\n          counters={this.state.counters}\r\n          onIncrement={this.handleIncrement}\r\n          onDecrement={this.handleDecrement}\r\n          onDelete={this.handleDelete}\r\n          onReset={this.handleReset}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass VidlyManager extends Component {\r\n  state = {};\r\n  render() {\r\n    return <div> Welcome to Vidly Manager</div>;\r\n  }\r\n}\r\n","D:\\git\\task-manager-react\\src\\components\\NavBar.jsx",["39","40","41","42","43"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <Link to=\"/\">\r\n            <a className=\"navbar-brand\">Practice React</a>\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <Link to=\"/counters\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link active\" aria-current=\"page\">\r\n                    Counters Management{\" \"}\r\n                    <span className=\"badge badge-pill badge-secondary\">\r\n                      {this.props.totalCounters}\r\n                    </span>\r\n                  </a>\r\n                </li>\r\n              </Link>\r\n\r\n              <Link to=\"/taskManager\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\">\r\n                    Task Manager\r\n                  </a>\r\n                </li>\r\n              </Link>\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className=\"nav-link disabled\"\r\n                  tabindex=\"-1\"\r\n                  aria-disabled=\"true\"\r\n                >\r\n                  Admin Panel\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 pull-right\">\r\n              <Link to=\"/logout\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\">\r\n                    Logout\r\n                  </a>\r\n                </li>\r\n              </Link>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","D:\\git\\task-manager-react\\src\\components\\taskManager.jsx",[],"D:\\git\\task-manager-react\\src\\components\\common\\like.jsx",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":42,"column":11,"nodeType":"50","endLine":42,"endColumn":51},{"ruleId":"51","severity":1,"message":"52","line":10,"column":3,"nodeType":"53","messageId":"54","endLine":10,"endColumn":11},{"ruleId":"51","severity":1,"message":"55","line":111,"column":7,"nodeType":"53","messageId":"54","endLine":111,"endColumn":19},{"ruleId":"56","severity":1,"message":"57","line":10,"column":13,"nodeType":"58","endLine":10,"endColumn":41},{"ruleId":"56","severity":1,"message":"57","line":27,"column":19,"nodeType":"58","endLine":27,"endColumn":70},{"ruleId":"56","severity":1,"message":"57","line":38,"column":19,"nodeType":"58","endLine":38,"endColumn":43},{"ruleId":"56","severity":1,"message":"57","line":44,"column":17,"nodeType":"58","endLine":48,"endColumn":18},{"ruleId":"56","severity":1,"message":"57","line":56,"column":19,"nodeType":"58","endLine":56,"endColumn":43},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'VidlyManager' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]